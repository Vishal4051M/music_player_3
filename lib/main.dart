import 'package:flutter/material.dart';
import 'package:flutter_displaymode/flutter_displaymode.dart';
import 'package:get/get.dart';
import 'package:music_player_3/screens/home_screen.dart';
import 'package:music_player_3/screens/permission.dart';
import 'package:music_player_3/screens/playlist_screen.dart';
import 'package:music_player_3/screens/song_detail.dart';
import 'package:music_player_3/screens/song_screen.dart';
import 'package:music_player_3/screens/themes.dart';
import 'package:music_player_3/widgets/nav_controller.dart';
import 'package:music_player_3/widgets/themenotifier.dart';
import 'package:provider/provider.dart';
import 'package:music_player_3/music_provider.dart'; // Import the ThemeNotifier class
import 'package:music_player_3/widgets/just_audio_background.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Generated by the Firebase CLI

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await FlutterDisplayMode.setHighRefreshRate();
  final musicPlayerProvider = MusicPlayerProvider();
  musicPlayerProvider.loadCurrentSong();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Initialize the JustAudioBackground
  await JustAudioBackground.init(
    androidNotificationChannelId: 'com.ryanheise.bg_demo.channel.audio',
    androidNotificationChannelName: 'Audio playback',
    androidNotificationOngoing: true,
  );

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (context) => MusicPlayerProvider()),
        ChangeNotifierProvider(
            create: (context) => ThemeNotifier()), // Add ThemeNotifier provider
      ],
      child: Consumer<ThemeNotifier>(
        builder: (context, themeNotifier, child) {
          return GetMaterialApp(
            title: 'Flutter Demo',
            theme: ThemeData(
              primarySwatch: themeNotifier.themeColor,
              textTheme: Theme.of(context).textTheme.apply(
                    bodyColor: Colors.white,
                    displayColor: Colors.white,
                  ),
            ),
            debugShowCheckedModeBanner: false,
            initialBinding: BindingsBuilder(() {
              Get.put(NavController());
            }),
            initialRoute: '/',
            getPages: [
              GetPage(name: '/', page: () => const HomeScreen()),
              GetPage(name: '/playlist', page: () => PlaylistScreen()),
              GetPage(name: '/song', page: () => const SongScreen()),
              GetPage(name: '/album', page: () => const AlbumDetailScreen()),
              GetPage(name: '/themes', page: () => const Themes()),
              GetPage(
                  name: '/request-permission',
                  page: () => RequestPermissionScreen()),
            ],
          );
        },
      ),
    );
  }
}
